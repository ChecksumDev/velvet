name: Build & Release Modpack [Release Please]

on:
  workflow_dispatch:
  push:
    branches:
      - release-please
      - stable
      - main

env:
  prismInstanceFolderName: prismInstance
  prismInstanceName: "Minecraft: Velvet Edition"
  prismInstanceAuthors: Checksum
  packwizInstallerBootstrapDownloadUrl: https://github.com/packwiz/packwiz-installer-bootstrap/releases/download/v0.0.3/packwiz-installer-bootstrap.jar

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Environment Variables
        run: |
          echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "CWD=$(pwd)" >> $GITHUB_ENV
          echo "COMMIT_ID=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
          echo "PACKWIZ_URL=https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/pack.toml" >> $GITHUB_ENV
          echo "packWizCurrVersion=$(head -n 3 pack.toml | tail -n 1)" >> $GITHUB_ENV
      - name: Setup Go and Install Packwiz
        uses: actions/setup-go@v5
        with:
          go-version: '1.18'
      - run: go install github.com/packwiz/packwiz@latest

      - name: Download packwiz bootstrap
        run: |
          mkdir -p ${{ env.prismInstanceFolderName }}/.minecraft
          curl -L -o ${{ env.prismInstanceFolderName }}/.minecraft/packwiz-installer-bootstrap.jar ${{ env.packwizInstallerBootstrapDownloadUrl }}
      - name: Update Prism Instance Config
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: |
            FILLIN_MODPACK_NAME
            FILLIN_MODPACK_EXPORT_NAME
            FILLIN_MODPACK_AUTHORS
            FILLIN_PACKWIZ_URL
          replace: |
            ${{ env.prismInstanceName }}
            ${{ env.prismInstanceName }}
            ${{ env.prismInstanceAuthors }}
            ${{ env.PACKWIZ_URL }}
          regex: false
          include: ${{ env.prismInstanceFolderName }}/instance.cfg

      - name: Install and Zip Prism Self Updating Instance
        run: |
          sudo apt-get update
          sudo apt-get install -y zip
          zip -qq -r $GITHUB_WORKSPACE/${{ env.REPO_NAME }}_PrismLauncher_${{ env.COMMIT_ID }}.zip . -i "*.*" -i ".minecraft/*.*"
        working-directory: ${{ env.prismInstanceFolderName }}

      - name: Build for Modrinth
        run: packwiz modrinth export --output $GITHUB_WORKSPACE/${{ env.REPO_NAME }}_Modrinth_${{ env.COMMIT_ID }}.mrpack

      - name: Build for CurseForge
        run: packwiz curseforge export --output $GITHUB_WORKSPACE/${{ env.REPO_NAME }}_Curseforge_${{ env.COMMIT_ID }}.zip

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            $GITHUB_WORKSPACE/${{ env.REPO_NAME }}_PrismLauncher_${{ env.COMMIT_ID }}.zip
            $GITHUB_WORKSPACE/${{ env.REPO_NAME }}_Modrinth_${{ env.COMMIT_ID }}.mrpack
            $GITHUB_WORKSPACE/${{ env.REPO_NAME }}_Curseforge_${{ env.COMMIT_ID }}.zip

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./artifacts

      - name: Create GitHub Release
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: simple
          conventional-commits: true

      - name: Update packwiz version
        if: steps.release.outputs.release_created
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: ${{ env.packWizCurrVersion }}
          replace: "version = \"${{ steps.release.outputs.version }}\""
          regex: false
          include: pack.toml

      - name: Upload Release Artifact [Modrinth]
        if: steps.release.outputs.release_created
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} ./artifacts/${{ env.REPO_NAME }}_Modrinth_${{ env.COMMIT_ID }}.mrpack

      - name: Upload Release Artifact [Curseforge]
        if: steps.release.outputs.release_created
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} ./artifacts/${{ env.REPO_NAME }}_Curseforge_${{ env.COMMIT_ID }}.zip

      - name: Upload Release Artifact [Prism]
        if: steps.release.outputs.release_created
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} ./artifacts/${{ env.REPO_NAME }}_PrismLauncher_${{ env.COMMIT_ID }}.zip

      - name: Push packwiz new version to main
        if: steps.release.outputs.release_created
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add pack.toml
          git commit -m "chore: update packwiz version to ${{ steps.release.outputs.version }}"
          git push origin HEAD:main
