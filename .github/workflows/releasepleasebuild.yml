name: Build & Release Modpack [Release Please]

on:
        workflow_dispatch:
        push:
                branches:
                        - release-please
                        - stable
                        - main
env:
        commitUsername: lilysoftpaw
        prismInstanceFolderName: prismInstance
        prismInstanceName: Velvet Modpack Prism
        prismInstanceAuthors: Checksum [ChecksumDev / chksmd / chksm] \(Modpack \& Packwiz\) \& Lilysoftpaw \(Github Actions Update\)
        packwizInstallerBootstrapDownloadUrl: https://github.com/packwiz/packwiz-installer-bootstrap/releases/download/v0.0.3/packwiz-installer-bootstrap.jar

jobs:
        build:
                runs-on: ubuntu-latest
                steps:
                        
                        - uses: actions/checkout@v4

                        - name: Get packwiz pack current Verison
                          run: echo "packWizCurrVersion=$(head -n 3 pack.toml | tail -n 1)" >> $GITHUB_ENV

                        - name: Github Release with release Please
                          uses: google-github-actions/release-please-action@v4
                          id: release
                          with:
                                  release-type: simple
                        - name: Get Repo Name
                          run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
                        - name: Get CWD
                          run: echo "CWD=$(pwd)" >> $GITHUB_ENV
                            
                        - name: Get COMMIT_ID id
                          run: echo 'COMMIT_ID='$(git rev-parse --short "$GITHUB_SHA") >> "$GITHUB_ENV"
                        - name: Setup git and pull release please action pr / branch
                          if: ${{ steps.release.outputs.release_created }}
                          run:    ls
                        - run:    git config --global user.name '${{ env.commitUsername }}'
                          if: ${{ steps.release.outputs.release_created }}
                        - run:    git config --global user.email '${{ env.commitUsername }}@users.noreply.github.com'
                          if: ${{ steps.release.outputs.release_created }}
                        - run:    git config --global pull.rebase false  # merge
                          if: ${{ steps.release.outputs.release_created }}
                        - run:    mkdir ../packwiz-fix &&ls ../packwiz-fix
                          if: ${{ steps.release.outputs.release_created }}
                        - run:   cd ../packwiz-fix && ls && git clone https://github.com/${{ github.repository }} && ls && ls ../packwiz-fix/${{env.REPO_NAME}}
                          if: ${{ steps.release.outputs.release_created }}
                        - run:   cd ../packwiz-fix/${{env.REPO_NAME}} && ls && git remote set-url origin https://x-access-token:${{ secrets.RELEASE_PLEASE_PAT }}@github.com/${{ github.repository }} 
                          if: ${{ steps.release.outputs.release_created }}
                        - run:   cd ../packwiz-fix/${{env.REPO_NAME}} && ls && git pull origin release-please--branches--main 
                          if: ${{ steps.release.outputs.release_created }}
                        - run:   cd ../packwiz-fix/${{env.REPO_NAME}} && ls && git branch release-please--branches--main
                          if: ${{ steps.release.outputs.release_created }}
                        - run: echo "${{toJson(steps.release.outputs) }}"
                          if: ${{ steps.release.outputs.release_created }}
                        - run: cat ../packwiz-fix/${{env.REPO_NAME}}/pack.toml
                          if: ${{ steps.release.outputs.release_created }}
                        - name: Update Packwiz pack version
                          if: ${{ steps.release.outputs.release_created }}
                          run: sed -i 's/${{env.packWizCurrVersion}}/version = "0.1.2"/g' ../packwiz-fix/${{env.REPO_NAME}}/pack.toml
                        - run: cat ../packwiz-fix/${{env.REPO_NAME}}/pack.toml
                          if: ${{ steps.release.outputs.release_created }}
                        - name: Commit new Packwiz pack version
                          run:     cd ../packwiz-fix/${{env.REPO_NAME}} && ls && git add pack.toml
                          if: ${{ steps.release.outputs.release_created }}
                        - run:     cd ../packwiz-fix/${{env.REPO_NAME}} && ls && git commit -m "Update Packwiz Version"
                          if: ${{ steps.release.outputs.release_created }}
                        
                        - name: Update Packwiz pack version (Again, for Release building)
                          uses: jacobtomlinson/gha-find-replace@v2
                          if: ${{ steps.release.outputs.release_created }}
                          with:
                                    find: ${{env.packWizCurrVersion}}
                                    replace: "version = 0.0.0" #${{steps.release.outputs.major }}.${{steps.release.outputs.minor }}.${{steps.release.outputs.patch }}"
                                    regex: false
                                    include: "pack.toml"
                        

                        - name: Create Packwiz Pack URL for Prism Self Updating Instance
                          run: echo "PACKWIZ_URL=https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/pack.toml" >> $GITHUB_ENV

                        - name: Download the packwiz bootstrap for Prism Self Updating Instance
                          run: curl -L -o ${{env.prismInstanceFolderName}}/.minecraft/packwiz-installer-bootstrap.jar ${{env.packwizInstallerBootstrapDownloadUrl}}

                        - name: Update Prism Self Updating Instance Config [MODPACK_NAME] (instance.cfg)
                          uses: jacobtomlinson/gha-find-replace@v2
                          with:
                                  find: "FILLIN_MODPACK_NAME"
                                  replace: ${{env.prismInstanceName}}
                                  regex: false
                                  include: "${{env.prismInstanceFolderName}}/instance.cfg"

                        - name: Update Prism Self Updating Instance Config [MODPACK_EXPORT_NAME] (instance.cfg)
                          uses: jacobtomlinson/gha-find-replace@v2
                          with:
                                  find: "FILLIN_MODPACK_EXPORT_NAME"
                                  replace: ${{env.prismInstanceName}}
                                  regex: false
                                  include: "${{env.prismInstanceFolderName}}/instance.cfg"

                        - name: Update Prism Self Updating Instance Config [MODPACK_AUTHORS] (instance.cfg)
                          uses: jacobtomlinson/gha-find-replace@v2
                          with:
                                  find: "FILLIN_MODPACK_AUTHORS"
                                  replace: ${{env.prismInstanceAuthors}}
                                  regex: false
                                  include: "${{env.prismInstanceFolderName}}/instance.cfg"

                        - name: Update Prism Self Updating Instance Config [PACKWIZ_URL] (instance.cfg)
                          uses: jacobtomlinson/gha-find-replace@v2
                          with:
                                  find: "FILLIN_PACKWIZ_URL"
                                  replace: ${{env.PACKWIZ_URL}}
                                  regex: false
                                  include: "${{env.prismInstanceFolderName}}/instance.cfg"

                        - name: Install zip to zip Prism Self Updating Instance
                          uses: montudor/action-zip@v1

                        - name: Zip Prism Self Updating Instance
                          run: zip -qq -r ../${{env.REPO_NAME}}_PrismLauncher_${{env.COMMIT_ID}}.zip . -i *.* -i .minecraft/*.*
                          working-directory: ${{env.prismInstanceFolderName}}

                        - name: Upload Prism Instance To Github Releases
                          uses: actions/upload-artifact@v4
                          with:
                                  name: ${{env.REPO_NAME}}_PrismLauncher_${{env.COMMIT_ID}}.zip
                                  path: ${{env.REPO_NAME}}_PrismLauncher_${{env.COMMIT_ID}}.zip
                                  if-no-files-found: warn

                        - name: Setup Go
                          uses: actions/setup-go@v5

                        - name: Install Packwiz
                          run: go install github.com/packwiz/packwiz@latest

                        - name: Build for Modrinth
                          run: packwiz modrinth export --output ${{env.REPO_NAME}}_Modrinth_${{env.COMMIT_ID}}.mrpack

                        - name: Build for CurseForge
                          run: packwiz curseforge export --output ${{env.REPO_NAME}}_Curseforge_${{env.COMMIT_ID}}.zip

                        - name: Upload Modrinth to GitHub Releases
                          uses: actions/upload-artifact@v4
                          with:
                                  name: ${{env.REPO_NAME}}_Modrinth_${{env.COMMIT_ID}}.mrpack
                                  path: ${{env.REPO_NAME}}_Modrinth_${{env.COMMIT_ID}}.mrpack
                                  if-no-files-found: error

                        - name: Upload CurseForge to GitHub Releases
                          uses: actions/upload-artifact@v4
                          with:
                                  name: ${{env.REPO_NAME}}_Curseforge_${{env.COMMIT_ID}}.zip
                                  path: ${{env.REPO_NAME}}_Curseforge_${{env.COMMIT_ID}}.zip
                                  if-no-files-found: error

                        
                        - name: Upload Release Artifact [Modrinth]
                          if: ${{ steps.release.outputs.release_created }}
                          env:
                                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                          run: gh release upload ${{ steps.release.outputs.tag_name }} ./${{env.REPO_NAME}}_Modrinth_${{env.COMMIT_ID}}.mrpack
                        - name: Upload Release Artifact [Curseforge]
                          if: ${{ steps.release.outputs.release_created }}
                          env:
                                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                          run: gh release upload ${{ steps.release.outputs.tag_name }} ./${{env.REPO_NAME}}_Curseforge_${{env.COMMIT_ID}}.zip
                        - name: Upload Release Artifact [Prism]
                          if: ${{ steps.release.outputs.release_created }}
                          env:
                                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                          run: gh release upload ${{ steps.release.outputs.tag_name }} ./${{env.REPO_NAME}}_PrismLauncher_${{env.COMMIT_ID}}.zip
                        - run:     cd ../packwiz-fix/${{env.REPO_NAME}} && ls && git push origin HEAD:release-please--branches--main
                          if: ${{ steps.release.outputs.release_created }}
